pragma circom 2.0.0;

/*
OUTPUT_TRANSFORM(u32, u8)
        u8[0] =  (u32[0] >> 24);
        u8[1] =  (u32[0] >> 16);
        u8[2] =  (u32[0] >> 8 );
        u8[3] =  (u32[0] >> 0 );
        u8[4] =  (u32[1] >> 24);
        u8[5] =  (u32[1] >> 16);
        u8[6] =  (u32[1] >> 8 );
        u8[7] =  (u32[1] >> 0 );
        u8[8] =  (u32[2] >> 24);
        u8[9] =  (u32[2] >> 16);
        u8[10] = (u32[2] >> 8 );
        u8[11] = (u32[2] >> 0 );
        u8[12] = (u32[3] >> 24);
        u8[13] = (u32[3] >> 16);
        u8[14] = (u32[3] >> 8 );
        u8[15] = (u32[3] >> 0 );
        u8[16] = (u32[4] >> 24);
        u8[17] = (u32[4] >> 16);
        u8[18] = (u32[4] >> 8 );
        u8[19] = (u32[4] >> 0 )
*/

template outputTransform() {
	signal input in[5];
	signal output out[64];

	out[0] <== (in[0] >> 24);
	out[1] <== (in[0] >> 16) & 0xFF;
	out[2] <== (in[0] >> 8) & 0xFF;
	out[3] <== in[0] & 0xFF;
	out[4] <== (in[1] >> 24);
	out[5] <== (in[1] >> 16) & 0xFF;
	out[6] <== (in[1] >> 8) & 0xFF;
	out[7] <== in[1] & 0xFF;
	out[8] <== (in[2] >> 24);
	out[9] <== (in[2] >> 16) & 0xFF;
	out[10] <== (in[2] >> 8) & 0xFF;
	out[11] <== in[2] & 0xFF;
	out[12] <== (in[3] >> 24);
	out[13] <== (in[3] >> 16) & 0xFF;
	out[14] <== (in[3] >> 8) & 0xFF;
	out[15] <== in[3] & 0xFF;
	out[16] <== (in[4] >> 24);
	out[17] <== (in[4] >> 16) & 0xFF;
	out[18] <== (in[4] >> 8) & 0xFF;
	out[19] <== in[4] & 0xFF;
}